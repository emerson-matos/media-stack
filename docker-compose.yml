version: "3.9"
name: media-stack
services:

  # To use/enable VPN, Run this compose file with --profile=vpn. Its highly recommended to use VPN.
  vpn:
    ## Read https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers for details on configuring VPN for your service provider.
    profiles: ["vpn"]
    container_name: vpn
    image: qmcgaw/gluetun:v3.39.1
    cap_add:
      - NET_ADMIN
    environment:
      - OPENVPN_USER=${OPENVPN_USER:-""}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:-""}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-protonvpn} # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom

      ## For list of server countries, visit https://raw.githubusercontent.com/qdm12/gluetun/master/internal/storage/servers.json
      ## When VPN_SERVICE_PROVIDER is custom. Comment the below line
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-Switzerland}

      - FREE_ONLY=on  # Valid with protonvpn only. on if using free service provided by protonvpn

      ## Enable below if VPN_SERVICE_PROVIDER=custom
      # - VPN_TYPE=openvpn # or wireguard.

      ## If VPN_TYPE is openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf

      ## If VPN_TYPE is wireguard. Replace below env variables as required.
      # - VPN_ENDPOINT_IP=1.2.3.4                                               # Replace with your wg endpoint ip or domain
      # - VPN_ENDPOINT_PORT=51820                                               # Replace with wg server port
      # - WIREGUARD_PUBLIC_KEY=wAUaJMhAq3NFutLHIdF8AN0B5WG8RndfQKLPTEDHal0=     # Replace with your wg public key
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=    # Replace with your wg client private key
      # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=  # Replaced with your wg pre-shared key
      # - WIREGUARD_ADDRESSES="10.64.222.21/32"                                 # Replace with wg address

    ## Enable volume if VPN_SERVICE_PROVIDER=custom and VPN_TYPE=openvpn is used
    # volumes:
      # - /yourpath/yourconfig.conf:/gluetun/config.conf:ro

    # networks:
      # - media-stack
    ports:
      # qbittorrent ports
      # - 5080:5080
      # - 6881:6881
      # - 6881:6881/udp
      # prowlarr ports
      # - 9696:9696
      # Transmission ports. Uncomment below if Transmission is used with VPN
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: "unless-stopped"

  transmission:
    profiles: ["vpn", "tx", "stack-1"]
    container_name: transmission
    image: lscr.io/linuxserver/transmission:latest
    # Uncomment this line if vpn is enabled
    # network_mode: service:vpn
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
      - USER=admin
      - PASS=transmission

    volumes:
      - "/media/emerson/.netflox/midia/tx-config:/config"
      - "/media/emerson/.netflox/midia/torrent-downloads:/downloads"
      - "/media/emerson/.netflox/midia/tx-watch:/watch"
    # # Uncomment below when using VPN in an LXC container
    # # Make sure to mount /dev/net/tun and /dev/net from underlaying host into your LXC.
    # devices:
    #   - /dev/net/tun:/dev/net/tun

    # Uncomment/enable below ports if VPN is used/enabled
    ports:
     - 9091:9091
     - 51413:51413
     - 51413:51413/udp
    #   # qbittorrent ports
    #   - 5080:5080
    #   - 6881:6881
    #   - 6881:6881/udp
    #   # prowlarr ports
    #   - 9696:9696
    restart: "unless-stopped"

  ## Default credentials of qBittorrent - Username: admin password: adminadmin ##
  ## Change password after install from UI --> Tools --> Options --> WebUI ##
  qbittorrent:
    profiles: ["vpn", "no-vpn"]
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:5.0.0

    # Unomment below if vpn is enabled
    # depends_on:               # Uncomment this line if vpn is enabled
      # vpn:                   # Uncomment this line if vpn is enabled
      #   condition: service_healthy # Uncomment this line if vpn is enabled

    # Comment below lines if VPN is enabled
    networks:               # Comment this line if vpn is enabled
      - media-stack         # Comment this line if vpn is enabled

    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
      - WEBUI_PORT=5080
    volumes:
      - "/media/emerson/.netflox/midia/qbittorrent-config:/config"
      - "/media/emerson/.netflox/midia/torrent-downloads:/downloads"

    ## Comment/Disable below ports if VPN is enabled
    ports:
      - 5080:5080
      - 6881:6881
      - 6881:6881/udp
    restart: "unless-stopped"

  radarr:
    profiles: ["vpn", "no-vpn"]
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.13.1
    networks:
      - media-stack # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
    #   mynetwork:
    #     ipv4_address: ${RADARR_STATIC_CONTAINER_IP} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
    ports:
      - 7878:7878
    volumes:
      - "/media/emerson/.netflox/midia/radarr-config:/config"
      - "/media/emerson/.netflox/midia/torrent-downloads:/downloads"
    restart: "unless-stopped"

  sonarr:
    profiles: ["vpn", "no-vpn"]
    image: linuxserver/sonarr:4.0.10
    container_name: sonarr
    networks:
      - media-stack # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
    #   mynetwork:
    #     ipv4_address: ${SONARR_STATIC_CONTAINER_IP} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
    volumes:
      - "/media/emerson/.netflox/midia/sonarr-config:/config"
      - "/media/emerson/.netflox/midia/torrent-downloads:/downloads"
    ports:
      - 8989:8989
    restart: unless-stopped

  jackett:
    profiles: ["vpn", "no-vpn"]
    container_name: jackett
    image: linuxserver/jackett:1.20.1
    # Uncomment below if vpn is enabled
    # depends_on:               # Uncomment this line if vpn is enabled
      # vpn:                   # Uncomment this line if vpn is enabled
      #   condition: service_healthy # Uncomment this line if vpn is enabled
    # network_mode: service:vpn # Uncomment this line if vpn is enabled

    networks:               # Comment this line if vpn is enabled
      - media-stack         # Comment this line if vpn is enabled
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
    volumes:
      - "/media/emerson/.netflox/midia/jackett-config:/config"
      - "/media/emerson/.netflox/midia/jackett-blackhole:/downloads"
    ports:
      - 9117:9117
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    profiles: ["bazarr", "stack-1", "stack-2"]
    image: lscr.io/linuxserver/bazarr:latest
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
      # - TZ='Brazil'
    volumes:
      - "/media/emerson/.netflox/midia/bazarr-config:/config"
      - "/media/emerson/.netflox/midia/torrent-downloads/movies:/downloads/movies" #optional
      - "/media/emerson/.netflox/midia/torrent-downloads/tvshows:/downloads/tvshows" #optional
    ports:
      - 6767:6767
    restart: unless-stopped

  prowlarr:
    profiles: ["vpn", "no-vpn"]
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    # Comment this if vpn is disabled
    # depends_on:
      # - vpn
    # network_mode: service:vpn # Comment this line if vpn is disabled

    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
    volumes:
      - "/media/emerson/.netflox/midia/prowlarr-config:/config"

    # Comment below ports if VPN is enabled.
    ports:
      - 9696:9696
    restart: unless-stopped

  jellyseerr:
    profiles: ["vpn", "no-vpn"]
    image: fallenbagel/jellyseerr:2.0.1
    container_name: jellyseerr
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyseerr-config:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped

  jellyfin:
    profiles: ["vpn", "no-vpn"]
    image: linuxserver/jellyfin:10.9.11
    container_name: jellyfin
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - "/media/emerson/.netflox/midia/jellyfin-config:/config"
      - "/media/emerson/.netflox/midia/torrent-downloads:/data"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped

  # Doc: https://github.com/navilg/cleanmyarr
  # cleanmyarr:
  #   profiles: ["vpn", "no-vpn"]
  #   depends_on:
  #     - radarr
  #     - sonarr
  #   image: linuxshots/cleanmyarr:0.8.1
  #   container_name: cleanmyarr
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - cleanmyarr-config:/config
    # restart: unless-stopped
    # environment:
    # - CMA_MAINTENANCE_CYCLE=${CMA_MAINTENANCE_CYCLE:-""}
    # - CMA_DELETE_AFTER_DAYS=${CMA_DELETE_AFTER_DAYS:-""}
    # - CMA_ENABLE_EMAIL_NOTIFICATION=${CMA_ENABLE_EMAIL_NOTIFICATION:-""}
    # - CMA_SMTP_USERNAME=${CMA_SMTP_USERNAME:-""}
    # - CMA_SMTP_ENCODED_PASSWORD=${CMA_SMTP_ENCODED_PASSWORD:-""}
    # - CMA_SMTP_TO_EMAILS=${CMA_SMTP_TO_EMAILS:-""}
    # - CMA_ENABLE_GOTIFY_NOTIFICATION=${CMA_ENABLE_GOTIFY_NOTIFICATION:-""}
    # - CMA_GOTIFY_URL=${CMA_GOTIFY_URL:-""}
    # - CMA_GOTIFY_ENCODED_APP_TOKEN=${CMA_GOTIFY_ENCODED_APP_TOKEN:-""}
    # - CMA_ENABLE_TELEGRAM_NOTIFICATION=${CMA_ENABLE_TELEGRAM_NOTIFICATION:-""}
    # - CMA_TELEGRAM_ENCODED_BOT_TOKEN=${CMA_TELEGRAM_ENCODED_BOT_TOKEN:-""}
    # - CMA_TELEGRAM_CHAT_ID=${CMA_TELEGRAM_CHAT_ID:-""}
    # - CMA_MONITOR_RADARR=${CMA_MONITOR_RADARR:-""}
    # - CMA_RADARR_URL=${CMA_RADARR_URL:-""}
    # - CMA_RADARR_ENCODED_API_KEY=${CMA_RADARR_ENCODED_API_KEY:-""}

networks:
  media-stack:
    external: true
