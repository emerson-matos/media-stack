name: media-stack
services:
  # To use/enable VPN, Run this compose file with --profile=vpn. Its highly recommended to use VPN.
  vpn:
    ## Read https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers for details on configuring VPN for your service provider.
    profiles: ["vpn"]
    container_name: vpn
    image: qmcgaw/gluetun:v3.39.1
    cap_add:
      - NET_ADMIN
    environment:
      - OPENVPN_USER=${OPENVPN_USER:-""}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:-""}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-protonvpn} # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom

      ## For list of server countries, visit https://raw.githubusercontent.com/qdm12/gluetun/master/internal/storage/servers.json
      ## When VPN_SERVICE_PROVIDER is custom. Comment the below line
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-Switzerland}

      - FREE_ONLY=on # Valid with protonvpn only. on if using free service provided by protonvpn

      ## Enable below if VPN_SERVICE_PROVIDER=custom
      # - VPN_TYPE=openvpn # or wireguard.

      ## If VPN_TYPE is openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf

      ## If VPN_TYPE is wireguard. Replace below env variables as required.
      # - VPN_ENDPOINT_IP=1.2.3.4                                               # Replace with your wg endpoint ip or domain
      # - VPN_ENDPOINT_PORT=51820                                               # Replace with wg server port
      # - WIREGUARD_PUBLIC_KEY=wAUaJMhAq3NFutLHIdF8AN0B5WG8RndfQKLPTEDHal0=     # Replace with your wg public key
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=    # Replace with your wg client private key
      # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=  # Replaced with your wg pre-shared key
      # - WIREGUARD_ADDRESSES="10.64.222.21/32"                                 # Replace with wg address

    ## Enable volume if VPN_SERVICE_PROVIDER=custom and VPN_TYPE=openvpn is used
    # volumes:
    # - /yourpath/yourconfig.conf:/gluetun/config.conf:ro

    # networks:
    # - media-stack
    ports:
      # qbittorrent ports
      # - 5080:5080
      # - 6881:6881
      # - 6881:6881/udp
      # prowlarr ports
      # - 9696:9696
      # Transmission ports. Uncomment below if Transmission is used with VPN
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: "unless-stopped"

  transmission:
    profiles: ["vpn", "no-vpn"]
    container_name: transmission
    image: lscr.io/linuxserver/transmission:latest
    # Uncomment this line if vpn is enabled
    # network_mode: service:vpn
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
      - USER=admin
      - PASS=transmission

    volumes:
      - "/media/tx-config:/config"
      - "/home/media/torrent-downloads:/downloads"
      - "/media/tx-watch:/watch"
    # # Uncomment below when using VPN in an LXC container
    # # Make sure to mount /dev/net/tun and /dev/net from underlaying host into your LXC.
    # devices:
    #   - /dev/net/tun:/dev/net/tun

    # Uncomment/enable below ports if VPN is used/enabled
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: "unless-stopped"

  ## Default credentials of qBittorrent - Username: admin password: adminadmin ##
  ## Change password after install from UI --> Tools --> Options --> WebUI ##
  qbittorrent:
    profiles: ["vpn", "no-vpn"]
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:5.0.0

    # Unomment below if vpn is enabled
    # depends_on:               # Uncomment this line if vpn is enabled
    # vpn:                   # Uncomment this line if vpn is enabled
    #   condition: service_healthy # Uncomment this line if vpn is enabled

    # Comment below lines if VPN is enabled
    networks: # Comment this line if vpn is enabled
      - media-stack # Comment this line if vpn is enabled

    environment:
      - PUID=1000
      - PGID=1000
      - TZ='America/Sao_Paulo'
      - WEBUI_PORT=5080
    volumes:
      - "/media/qbittorrent-config:/config"
      - "/home/media/torrent-downloads:/downloads"

    ## Comment/Disable below ports if VPN is enabled
    ports:
      - 5080:5080
      - 6881:6881
      - 6881:6881/udp
    restart: "unless-stopped"

  radarr:
    profiles: ["vpn", "no-vpn"]
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.13.1
    labels:
      - traefik.enable=true
      - "traefik.http.routers.radarr.rule=Host(`radarr.emerson.abc.br`)"
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=le
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      # - traefik.http.services.radarr.loadbalancer.server.passHostHeader=true
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/media/radarr-config:/config"
      - "/home/media/torrent-downloads:/downloads"
    restart: "unless-stopped"

  sonarr:
    profiles: ["vpn", "no-vpn"]
    image: lscr.io/linuxserver/sonarr:4.0.13
    container_name: sonarr
    labels:
      - traefik.enable=true
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.emerson.abc.br`)"
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=le
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      # - traefik.http.services.sonarr.loadbalancer.server.passHostHeader=true
    networks:
      - media-stack # Comment this line if VPN is enabled
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/media/sonarr-config:/config"
      - "/home/media/torrent-downloads:/downloads"
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    profiles: ["vpn", "no-vpn"]
    image: lscr.io/linuxserver/bazarr:latest
    labels:
      - traefik.enable=true
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.emerson.abc.br`)"
      - traefik.http.routers.bazarr.entrypoints=websecure
      - traefik.http.routers.bazarr.service=bazarr
      - traefik.http.routers.bazarr.tls=true
      - traefik.http.routers.bazarr.tls.certresolver=le
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      # - traefik.http.services.bazarr.loadbalancer.server.passHostHeader=true
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/media/bazarr-config:/config"
      - "/home/media/torrent-downloads/:/downloads" #optional
    restart: unless-stopped

  prowlarr:
    profiles: ["vpn", "no-vpn"]
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    # Comment this if vpn is disabled
    # depends_on:
    # - vpn
    # network_mode: service:vpn # Comment this line if vpn is disabled

    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/media/prowlarr-config:/config"
    ports:
      - 9696:9696
    restart: unless-stopped

  jellyseerr:
    profiles: ["vpn", "no-vpn"]
    image: fallenbagel/jellyseerr:2.3.0
    container_name: jellyseerr
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/jellyseerr-config:/app/config
    labels:
      - traefik.enable=true
      - "traefik.http.routers.jellyseerr.rule=Host(`pedidos.emerson.abc.br`)"
      - traefik.http.routers.jellyseerr.entrypoints=websecure
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
      - traefik.http.routers.jellyseerr.service=jellyseerr
      - traefik.http.routers.jellyseerr.tls=true
      - traefik.http.routers.jellyseerr.tls.certresolver=le
        # ports:
        # - 5055:5055
    restart: unless-stopped

  jellyfin:
    profiles: ["vpn", "no-vpn"]
    image: lscr.io/linuxserver/jellyfin:10.10.3
    container_name: jellyfin
    networks:
      - media-stack
    environment:
      - PUID=1000
      - PGID=1000
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "/media/jellyfin-config:/config"
      - "/home/media/torrent-downloads:/data"
    deploy:
      resources:
        reservations:
          devices:
            - driver: cdi
              device_ids: 
              - nvidia.com/gpu=all
              capabilities: [gpu]
    ports:
    - 8096:8096
    - 7359:7359/udp
    - 8920:8920
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - "traefik.http.routers.jellyfin.rule=Host(`flix.emerson.abc.br`)"
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin.service=jellyfin-svc
      - traefik.http.routers.jellyfin.tls=true
      - traefik.http.routers.jellyfin.tls.certresolver=le
      - traefik.http.routers.jellyfin.middlewares=jellyfin-mw
      #### The customResponseHeaders option lists the Header names and values to apply to the response.
      - "traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
      #### The sslRedirect is set to true, then only allow https requests.
      - traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true
      #### The sslHost option is the host name that is used to redirect http requests to https.
      #### This is the exact URL that will be redirected to, so you can remove the :9999 port if using default SSL port
      - traefik.http.middlewares.jellyfin-mw.headers.SSLHost=flix.emerson.abc.br
      #### Set sslForceHost to true and set SSLHost to forced requests to use SSLHost even the ones that are already using SSL.
      #### Note that this uses SSLHost verbatim, so add the port to SSLHost if you are using an alternate port.
      - traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true
      #### The stsSeconds is the max-age of the Strict-Transport-Security header. If set to 0, would NOT include the header.
      - traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000
      #### The stsIncludeSubdomains is set to true, the includeSubDomains directive will be
      #### appended to the Strict-Transport-Security header.
      - traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true
      #### Set stsPreload to true to have the preload flag appended to the Strict-Transport-Security header.
      - traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true
      #### Set forceSTSHeader to true, to add the STS header even when the connection is HTTP.
      - traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true
      #### Set frameDeny to true to add the X-Frame-Options header with the value of DENY.
      - traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true
      #### Set contentTypeNosniff to true to add the X-Content-Type-Options header with the value nosniff.
      - traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true
      #### Set browserXssFilter to true to add the X-XSS-Protection header with the value 1; mode=block.
      - traefik.http.middlewares.jellyfin-mw.headers.customresponseheaders.X-XSS-PROTECTION=1
      #### The customFrameOptionsValue allows the X-Frame-Options header value to be set with a custom value. This
      #### overrides the FrameDeny option.
      - "traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://flix.emerson.abc.br'"
      ## HTTP Service
      # We define the port here as a port is required, but note that the service is pointing to the service defined in @file
      # - "traefik.http.routers.jellyfin.service=jellyfin-svc@file"
      - "traefik.http.services.jellyfin-svc.loadBalancer.server.port=8096"
      - "traefik.http.services.jellyfin-svc.loadBalancer.passHostHeader=true"
      ## Redirection of HTTP on port 9999 to HTTPS on port 9999 (consistent protocol)
      - "traefik.http.routers.jellyfin-insecure.entryPoints=websecure"
      - "traefik.http.routers.jellyfin-insecure.rule=Host(`flix.emerson.abc.br`)" # OPTIONAL: && PathPrefix(`/jellyfin`)
      - "traefik.http.routers.jellyfin-insecure.middlewares=jellyfin-insecure-mw"
      - "traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.scheme=https"
      # - "traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.port=9999" # remove if you are using a default port
      - "traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.permanent=false"
      - "traefik.http.routers.jellyfin-insecure.service=noop@internal"
    restart: unless-stopped

  # Doc: https://github.com/navilg/cleanmyarr
  # cleanmyarr:
  #   profiles: ["vpn", "no-vpn"]
  #   depends_on:
  #     - radarr
  #     - sonarr
  #   image: linuxshots/cleanmyarr:0.8.1
  #   container_name: cleanmyarr
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - cleanmyarr-config:/config
  # restart: unless-stopped
  # environment:
  # - CMA_MAINTENANCE_CYCLE=${CMA_MAINTENANCE_CYCLE:-""}
  # - CMA_DELETE_AFTER_DAYS=${CMA_DELETE_AFTER_DAYS:-""}
  # - CMA_ENABLE_EMAIL_NOTIFICATION=${CMA_ENABLE_EMAIL_NOTIFICATION:-""}
  # - CMA_SMTP_USERNAME=${CMA_SMTP_USERNAME:-""}
  # - CMA_SMTP_ENCODED_PASSWORD=${CMA_SMTP_ENCODED_PASSWORD:-""}
  # - CMA_SMTP_TO_EMAILS=${CMA_SMTP_TO_EMAILS:-""}
  # - CMA_ENABLE_GOTIFY_NOTIFICATION=${CMA_ENABLE_GOTIFY_NOTIFICATION:-""}
  # - CMA_GOTIFY_URL=${CMA_GOTIFY_URL:-""}
  # - CMA_GOTIFY_ENCODED_APP_TOKEN=${CMA_GOTIFY_ENCODED_APP_TOKEN:-""}
  # - CMA_ENABLE_TELEGRAM_NOTIFICATION=${CMA_ENABLE_TELEGRAM_NOTIFICATION:-""}
  # - CMA_TELEGRAM_ENCODED_BOT_TOKEN=${CMA_TELEGRAM_ENCODED_BOT_TOKEN:-""}
  # - CMA_TELEGRAM_CHAT_ID=${CMA_TELEGRAM_CHAT_ID:-""}
  # - CMA_MONITOR_RADARR=${CMA_MONITOR_RADARR:-""}
  # - CMA_RADARR_URL=${CMA_RADARR_URL:-""}
  # - CMA_RADARR_ENCODED_API_KEY=${CMA_RADARR_ENCODED_API_KEY:-""}

networks:
  media-stack:
    external: true
